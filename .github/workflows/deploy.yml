name: Deploy to GitHub Pages

on:
  push:
    branches: [ "main", "master" ]
  pull_request:
    branches: [ "main", "master" ]
  workflow_dispatch:

# Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
permissions:
  contents: read
  pages: write
  id-token: write

# Allow only one concurrent deployment
concurrency:
  group: "pages"
  cancel-in-progress: true

jobs:
  test:
    name: Run Tests
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.10'

      - name: Create necessary directories
        run: |
          mkdir -p static/images static/videos static/css static/js static/documents
          mkdir -p templates data

      - name: Create placeholder static files
        run: |
          # Create placeholder files if they don't exist
          touch static/images/benedict-dlamini.png
          touch static/videos/invideo-ai-personal-intro.mp4
          
          # Create minimal CSS if it doesn't exist
          if [ ! -f static/css/styles.css ]; then
            echo "/* Placeholder CSS */" > static/css/styles.css
          fi
          
          # Create minimal JS if it doesn't exist
          if [ ! -f static/js/app.js ]; then
            echo "// Placeholder JS" > static/js/app.js
          fi

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Run tests
        env:
          PYTHONPATH: .
        run: |
          pytest tests/ -v

  build:
    name: Generate Static Site
    needs: test
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.10'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Create necessary directories
        run: |
          mkdir -p static/images static/videos static/css static/js static/documents
          mkdir -p templates data

      - name: Create placeholder static files
        run: |
          # Create placeholder image (1x1 pixel PNG)
          echo "iVBORw0KGgoAAAANSUhEUgAAAAEAAAABCAYAAAAfFcSJAAAADUlEQVR42mP8/5+hHgAHggJ/PchI7wAAAABJRU5ErkJggg==" | base64 -d > static/images/benedict-dlamini.png
          
          # Create placeholder video file
          touch static/videos/invideo-ai-personal-intro.mp4
          
          # Ensure CSS and JS files exist
          if [ ! -f static/css/styles.css ]; then
            echo "/* Placeholder CSS */" > static/css/styles.css
          fi
          
          if [ ! -f static/js/app.js ]; then
            echo "// Placeholder JS" > static/js/app.js
          fi

      - name: Verify files exist
        run: |
          echo "Checking required files..."
          ls -la static/
          ls -la static/css/
          ls -la static/js/
          ls -la static/images/
          ls -la data/
          ls -la templates/

      - name: Generate Static Site
        run: |
          echo "Starting static site generation..."
          python generate_static_site.py
          echo "Static site generation completed"

      - name: Verify generated site
        run: |
          echo "Checking generated site..."
          ls -la _site/
          if [ -f _site/index.html ]; then
            echo "✅ index.html generated successfully"
            head -20 _site/index.html
          else
            echo "❌ index.html not found!"
            exit 1
          fi

      - name: Setup Pages
        uses: actions/configure-pages@v4

      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: '_site'

  deploy:
    name: Deploy to GitHub Pages
    if: github.ref == 'refs/heads/main' || github.ref == 'refs/heads/master'
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4